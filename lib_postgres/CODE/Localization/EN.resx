<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Action_list" xml:space="preserve">
    <value>Action List</value>
  </data>
  <data name="Add_another_source" xml:space="preserve">
    <value>Add another source</value>
  </data>
  <data name="Add_author" xml:space="preserve">
    <value>Add author:</value>
  </data>
  <data name="Add_city" xml:space="preserve">
    <value>Add city</value>
  </data>
  <data name="Add_format" xml:space="preserve">
    <value>Add format</value>
  </data>
  <data name="Add_genre" xml:space="preserve">
    <value>Add genre</value>
  </data>
  <data name="Add_language" xml:space="preserve">
    <value>Add language</value>
  </data>
  <data name="Add_mark" xml:space="preserve">
    <value>Add mark</value>
  </data>
  <data name="Add_person" xml:space="preserve">
    <value>Add person</value>
  </data>
  <data name="Add_place" xml:space="preserve">
    <value>Add storage location</value>
  </data>
  <data name="Add_pubhouse" xml:space="preserve">
    <value>Add publishing house</value>
  </data>
  <data name="Add_series" xml:space="preserve">
    <value>Add book series</value>
  </data>
  <data name="Another" xml:space="preserve">
    <value>Another</value>
  </data>
  <data name="Another_source_already_exists" xml:space="preserve">
    <value>Another source already exists</value>
  </data>
  <data name="another_source_list" xml:space="preserve">
    <value>List of other sources of recommendations</value>
  </data>
  <data name="Appellation" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Art" xml:space="preserve">
    <value>Art</value>
  </data>
  <data name="Arts_by_language" xml:space="preserve">
    <value>Arts by language</value>
  </data>
  <data name="Art_list" xml:space="preserve">
    <value>List of arts</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Authors" xml:space="preserve">
    <value>Authors</value>
  </data>
  <data name="Authors_list" xml:space="preserve">
    <value>List of authors</value>
  </data>
  <data name="Authors_recommend_authors" xml:space="preserve">
    <value>Authors recommend authors</value>
  </data>
  <data name="Authors_recommend_books" xml:space="preserve">
    <value>Authors recommend books</value>
  </data>
  <data name="Author_alredy_exists" xml:space="preserve">
    <value>Author alredy exists</value>
  </data>
  <data name="Author_s" xml:space="preserve">
    <value>Author(s)</value>
  </data>
  <data name="Book" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="Books_list" xml:space="preserve">
    <value>List of books</value>
  </data>
  <data name="Books_list_taken_by_others" xml:space="preserve">
    <value>List of books that were taken from me</value>
  </data>
  <data name="Books_recommend_authors" xml:space="preserve">
    <value>Books recommend authors</value>
  </data>
  <data name="Books_recommend_books" xml:space="preserve">
    <value>Books recommend books</value>
  </data>
  <data name="caption_from_anothers" xml:space="preserve">
    <value>from anothers</value>
  </data>
  <data name="caption_from_authors" xml:space="preserve">
    <value>from authors</value>
  </data>
  <data name="caption_from_books" xml:space="preserve">
    <value>from books</value>
  </data>
  <data name="Cities_list" xml:space="preserve">
    <value>List of cities</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="City_already_exists" xml:space="preserve">
    <value>City already exists</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Edit_another_source" xml:space="preserve">
    <value>Edit another source</value>
  </data>
  <data name="Edit_author_name" xml:space="preserve">
    <value>Edit author name</value>
  </data>
  <data name="Edit_city" xml:space="preserve">
    <value>Edit city</value>
  </data>
  <data name="Edit_format" xml:space="preserve">
    <value>Edit format</value>
  </data>
  <data name="Edit_genre" xml:space="preserve">
    <value>Edit genre</value>
  </data>
  <data name="Edit_language" xml:space="preserve">
    <value>Edit language</value>
  </data>
  <data name="Edit_mark" xml:space="preserve">
    <value>Edit mark</value>
  </data>
  <data name="Edit_person" xml:space="preserve">
    <value>Edit person</value>
  </data>
  <data name="Edit_place" xml:space="preserve">
    <value>Edit name of storage location:</value>
  </data>
  <data name="Edit_pubhouse" xml:space="preserve">
    <value>Edit publishing house</value>
  </data>
  <data name="Edit_series" xml:space="preserve">
    <value>Edit book series</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="Formats_list" xml:space="preserve">
    <value>List of reading formats</value>
  </data>
  <data name="Format_already_exists" xml:space="preserve">
    <value>Format already exists</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="Genres_list" xml:space="preserve">
    <value>List of genres</value>
  </data>
  <data name="Genre_already_exists" xml:space="preserve">
    <value>Genre already exists</value>
  </data>
  <data name="ID_book_short_text" xml:space="preserve">
    <value>Book ID</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Languages_list" xml:space="preserve">
    <value>List of languages</value>
  </data>
  <data name="Language_already_exists" xml:space="preserve">
    <value>Language already exists</value>
  </data>
  <data name="Language_pub" xml:space="preserve">
    <value>Publication language</value>
  </data>
  <data name="Langue_original" xml:space="preserve">
    <value>Original langue</value>
  </data>
  <data name="Mark" xml:space="preserve">
    <value>Mark</value>
  </data>
  <data name="Mark_already_exists" xml:space="preserve">
    <value>Mark already exists</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="New_appellation" xml:space="preserve">
    <value>New city name:</value>
  </data>
  <data name="New_format" xml:space="preserve">
    <value>New format</value>
  </data>
  <data name="New_name" xml:space="preserve">
    <value>New name:</value>
  </data>
  <data name="Notice" xml:space="preserve">
    <value>Notice</value>
  </data>
  <data name="Others_recommend_authors" xml:space="preserve">
    <value>Others recommend authors</value>
  </data>
  <data name="Others_recommend_books" xml:space="preserve">
    <value>Others recommend books</value>
  </data>
  <data name="Pages" xml:space="preserve">
    <value>Pages</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="Persons_list" xml:space="preserve">
    <value>List of people</value>
  </data>
  <data name="Person_already_exists" xml:space="preserve">
    <value>Person already exists</value>
  </data>
  <data name="Person_short_name" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="Placement" xml:space="preserve">
    <value>Placement</value>
  </data>
  <data name="Placements_list" xml:space="preserve">
    <value>Placements list</value>
  </data>
  <data name="Place_already_exists" xml:space="preserve">
    <value>Storage location: already exists</value>
  </data>
  <data name="Place_name" xml:space="preserve">
    <value>Name of storage location:</value>
  </data>
  <data name="Pubhouse" xml:space="preserve">
    <value>Publishing house</value>
  </data>
  <data name="Pubhouses_list" xml:space="preserve">
    <value>List of publishing houses</value>
  </data>
  <data name="Pubhouse_already_exists" xml:space="preserve">
    <value>Publishing house already exists</value>
  </data>
  <data name="Pubhouse_name" xml:space="preserve">
    <value>Name of publishing house:</value>
  </data>
  <data name="Publication_year" xml:space="preserve">
    <value>Publication year</value>
  </data>
  <data name="Read_list" xml:space="preserve">
    <value>Have read</value>
  </data>
  <data name="Recommendation" xml:space="preserve">
    <value>Recommendation</value>
  </data>
  <data name="Recommendations_list" xml:space="preserve">
    <value>List of recommendations</value>
  </data>
  <data name="Recommendation_type" xml:space="preserve">
    <value>Recomm. type</value>
  </data>
  <data name="Series" xml:space="preserve">
    <value>Series</value>
  </data>
  <data name="Series_already_exist" xml:space="preserve">
    <value>Series already exist</value>
  </data>
  <data name="Series_list" xml:space="preserve">
    <value>List of series</value>
  </data>
  <data name="Simple_proper_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="Source_type" xml:space="preserve">
    <value>Source type</value>
  </data>
  <data name="Storage" xml:space="preserve">
    <value>Storage</value>
  </data>
  <data name="Storages_list" xml:space="preserve">
    <value>List of storage locations</value>
  </data>
  <data name="Value_cannot_be_ empty" xml:space="preserve">
    <value>Value cannot be empty</value>
  </data>
  <data name="Where_books" xml:space="preserve">
    <value>Where are the books</value>
  </data>
  <data name="Who_has_my_books" xml:space="preserve">
    <value>Who has my books</value>
  </data>
  <data name="Writing_year" xml:space="preserve">
    <value>Year of writing</value>
  </data>
</root>