<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="black_hole" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\black_hole.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="broken_base" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\broken_base.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="happy_HDD" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\happy_HDD.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="img_noconnect" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\img_noconnect.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="creation01" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\creation01.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="img_good_DB" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\img_good_DB.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="img_HDD" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\img_HDD.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="wand" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\wand.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Query_Set_On_Delete_Cascade" xml:space="preserve">
    <value>--all tables here: 
-- action
-- art
-- art_read
-- art_to_read
-- author_art
-- book
-- location
-- possession	

-- public.author_art

ALTER TABLE IF EXISTS public.author_art
	DROP CONSTRAINT author_art_art_fkey,
    ADD CONSTRAINT author_art_art_fkey FOREIGN KEY (art)
    REFERENCES public.art (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
	
ALTER TABLE IF EXISTS public.author_art
    DROP CONSTRAINT author_art_author_fkey,
	ADD CONSTRAINT author_art_author_fkey FOREIGN KEY (author)
    REFERENCES public.author (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
	
-- public.book

ALTER TABLE IF EXISTS public.book
    DROP CONSTRAINT book_id_art_fkey,
	ADD CONSTRAINT book_id_art_fkey FOREIGN KEY (id_art)
    REFERENCES public.art (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
	
ALTER TABLE IF EXISTS public.book
    DROP CONSTRAINT book_id_city_fkey,
	ADD CONSTRAINT book_id_city_fkey FOREIGN KEY (id_city)
    REFERENCES public.city (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;	
	
ALTER TABLE IF EXISTS public.book
    DROP CONSTRAINT book_id_language_fkey,
	ADD CONSTRAINT book_id_language_fkey FOREIGN KEY (id_language)
    REFERENCES public.language (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.book
    DROP CONSTRAINT book_id_publishing_house_fkey,
	ADD CONSTRAINT book_id_publishing_house_fkey FOREIGN KEY (id_publishing_house)
    REFERENCES public.publishing_house (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.book
    DROP CONSTRAINT book_id_series_fkey,
	ADD CONSTRAINT book_id_series_fkey FOREIGN KEY (id_series)
    REFERENCES public.series (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
	
-- public.location
	
ALTER TABLE IF EXISTS public.location
    DROP CONSTRAINT location_action_fkey,
	ADD CONSTRAINT location_action_fkey FOREIGN KEY (action)
    REFERENCES public.action (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.location
    DROP CONSTRAINT location_book_fkey,
	ADD CONSTRAINT location_book_fkey FOREIGN KEY (book)
    REFERENCES public.book (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
	
ALTER TABLE IF EXISTS public.location
    DROP CONSTRAINT location_place_fkey,
	ADD CONSTRAINT location_place_fkey FOREIGN KEY (place)
    REFERENCES public.place (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.location
    DROP CONSTRAINT locationn_owner_fkey,
	ADD CONSTRAINT locationn_owner_fkey FOREIGN KEY (owner)
    REFERENCES public.people (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
	
-- public.art_read

ALTER TABLE IF EXISTS public.art_read
    DROP CONSTRAINT art_read_art_id_fkey,
	ADD CONSTRAINT art_read_art_id_fkey FOREIGN KEY (art_id)
    REFERENCES public.art (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.art_read
    DROP CONSTRAINT art_read_book_format_id_fkey,
	ADD CONSTRAINT art_read_book_format_id_fkey FOREIGN KEY (book_format_id)
    REFERENCES public.book_format (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.art_read
    DROP CONSTRAINT art_read_book_id_fkey,
	ADD CONSTRAINT art_read_book_id_fkey FOREIGN KEY (book_id)
    REFERENCES public.book (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.art_read
    DROP CONSTRAINT art_read_mark_id_fkey,
	ADD CONSTRAINT art_read_mark_id_fkey FOREIGN KEY (mark_id)
    REFERENCES public.mark (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.art_read
    DROP CONSTRAINT art_read_read_language_id_fkey,
	ADD CONSTRAINT art_read_read_language_id_fkey FOREIGN KEY (read_language_id)
    REFERENCES public.language (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

--  public.action

	ALTER TABLE IF EXISTS public.action
    DROP CONSTRAINT  action_action_type_fkey,
	ADD CONSTRAINT action_action_type_fkey FOREIGN KEY (action_type)
    REFERENCES public.action_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.action
    DROP CONSTRAINT action_place_fkey,
	ADD CONSTRAINT action_place_fkey FOREIGN KEY (place)
    REFERENCES public.place (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

--  public.art

ALTER TABLE IF EXISTS public.art
    DROP CONSTRAINT art_genre_fkey,
	ADD CONSTRAINT art_genre_fkey FOREIGN KEY (genre)
    REFERENCES public.genre (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.art
    DROP CONSTRAINT art_orig_language_fkey,
    ADD CONSTRAINT art_orig_language_fkey FOREIGN KEY (orig_language)
    REFERENCES public.language (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

--  public.art_to_read

ALTER TABLE IF EXISTS public.art_to_read
	DROP CONSTRAINT art_to_read_source_another_id_fkey,
	ADD CONSTRAINT art_to_read_source_another_id_fkey FOREIGN KEY (source_another_id)
    REFERENCES public.source_toread_another (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.art_to_read
	DROP CONSTRAINT art_to_read_source_art_id_fkey,
	ADD CONSTRAINT art_to_read_source_art_id_fkey FOREIGN KEY (source_art_id)
    REFERENCES public.art (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.art_to_read
	DROP CONSTRAINT art_to_read_source_author_id_fkey,
	ADD CONSTRAINT art_to_read_source_author_id_fkey FOREIGN KEY (source_author_id)
    REFERENCES public.author (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.art_to_read
	DROP CONSTRAINT art_to_read_toread_art_id_fkey,
	ADD CONSTRAINT art_to_read_toread_art_id_fkey FOREIGN KEY (toread_art_id)
    REFERENCES public.art (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.art_to_read
    DROP CONSTRAINT art_to_read_toread_author_id_fkey,
	ADD CONSTRAINT art_to_read_toread_author_id_fkey FOREIGN KEY (toread_author_id)
    REFERENCES public.author (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;
	
--  public.possession	

ALTER TABLE IF EXISTS public.possession
    DROP CONSTRAINT possession_action_fkey,
	ADD CONSTRAINT possession_action_fkey FOREIGN KEY (action)
    REFERENCES public.action (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.possession
    DROP CONSTRAINT possession_book_fkey,
	ADD CONSTRAINT possession_book_fkey FOREIGN KEY (book)
    REFERENCES public.book (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.possession
    DROP CONSTRAINT possession_person_fkey,
	ADD CONSTRAINT possession_person_fkey FOREIGN KEY (person)
    REFERENCES public.people (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;</value>
  </data>
  <data name="img_bookshelf" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\img_bookshelf.jpg;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>